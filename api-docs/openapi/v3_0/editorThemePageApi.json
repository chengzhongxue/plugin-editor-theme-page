{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Halo",
    "version" : "2.20.21"
  },
  "servers" : [ {
    "url" : "http://localhost:52168",
    "description" : "Generated server url"
  } ],
  "security" : [ {
    "basicAuth" : [ ],
    "bearerAuth" : [ ]
  } ],
  "paths" : {
    "/apis/console.api.editorthemepage.kunkunyu.com/v1alpha1/themefiles/{name}/file" : {
      "post" : {
        "operationId" : "CreateFileOrDirectory",
        "parameters" : [ {
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateFileRequest"
              }
            }
          }
        },
        "responses" : { },
        "tags" : [ "console.api.editorthemepage.kunkunyu.com/v1alpha1/ThemeFile" ]
      }
    },
    "/apis/console.api.editorthemepage.kunkunyu.com/v1alpha1/themefiles/{name}/file-content" : {
      "get" : {
        "operationId" : "GetFileContent",
        "parameters" : [ {
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "path",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "console.api.editorthemepage.kunkunyu.com/v1alpha1/ThemeFile" ]
      },
      "put" : {
        "operationId" : "WriteContentToFile",
        "parameters" : [ {
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "path",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/WriteContentRequest"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        },
        "tags" : [ "console.api.editorthemepage.kunkunyu.com/v1alpha1/ThemeFile" ]
      }
    },
    "/apis/console.api.editorthemepage.kunkunyu.com/v1alpha1/themefiles/{name}/files" : {
      "delete" : {
        "description" : "Delete file or directory in theme by given path",
        "operationId" : "DeleteFileInThemeFile",
        "parameters" : [ {
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "path",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "console.api.editorthemepage.kunkunyu.com/v1alpha1/ThemeFile" ]
      },
      "get" : {
        "operationId" : "ListFilesInThemeFile",
        "parameters" : [ {
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "path",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ThemeFile"
                  }
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "console.api.editorthemepage.kunkunyu.com/v1alpha1/ThemeFile" ]
      }
    },
    "/apis/console.api.editorthemepage.kunkunyu.com/v1alpha1/themefiles/{name}/upload" : {
      "post" : {
        "operationId" : "UploadFileToThemeFile",
        "parameters" : [ {
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/UploadRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "console.api.editorthemepage.kunkunyu.com/v1alpha1/ThemeFile" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "AddOperation" : {
        "required" : [ "op", "path", "value" ],
        "type" : "object",
        "properties" : {
          "op" : {
            "type" : "string",
            "enum" : [ "add" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          },
          "value" : {
            "description" : "Value can be any JSON value"
          }
        }
      },
      "CopyOperation" : {
        "required" : [ "op", "from", "path" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          },
          "op" : {
            "type" : "string",
            "enum" : [ "copy" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          }
        }
      },
      "CreateFileRequest" : {
        "required" : [ "path" ],
        "type" : "object",
        "properties" : {
          "isDir" : {
            "type" : "boolean"
          },
          "path" : {
            "minLength" : 1,
            "type" : "string"
          }
        }
      },
      "JsonPatch" : {
        "minItems" : 1,
        "uniqueItems" : true,
        "type" : "array",
        "description" : "JSON schema for JSONPatch operations",
        "items" : {
          "oneOf" : [ {
            "$ref" : "#/components/schemas/AddOperation"
          }, {
            "$ref" : "#/components/schemas/ReplaceOperation"
          }, {
            "$ref" : "#/components/schemas/TestOperation"
          }, {
            "$ref" : "#/components/schemas/RemoveOperation"
          }, {
            "$ref" : "#/components/schemas/MoveOperation"
          }, {
            "$ref" : "#/components/schemas/CopyOperation"
          } ]
        }
      },
      "MoveOperation" : {
        "required" : [ "op", "from", "path" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          },
          "op" : {
            "type" : "string",
            "enum" : [ "move" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          }
        }
      },
      "Part" : {
        "type" : "object"
      },
      "RemoveOperation" : {
        "required" : [ "op", "path" ],
        "type" : "object",
        "properties" : {
          "op" : {
            "type" : "string",
            "enum" : [ "remove" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          }
        }
      },
      "ReplaceOperation" : {
        "required" : [ "op", "path", "value" ],
        "type" : "object",
        "properties" : {
          "op" : {
            "type" : "string",
            "enum" : [ "replace" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          },
          "value" : {
            "description" : "Value can be any JSON value"
          }
        }
      },
      "TestOperation" : {
        "required" : [ "op", "path", "value" ],
        "type" : "object",
        "properties" : {
          "op" : {
            "type" : "string",
            "enum" : [ "test" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          },
          "value" : {
            "description" : "Value can be any JSON value"
          }
        }
      },
      "ThemeFile" : {
        "type" : "object",
        "properties" : {
          "canRead" : {
            "type" : "boolean"
          },
          "canWrite" : {
            "type" : "boolean"
          },
          "directory" : {
            "type" : "boolean"
          },
          "lastModifiedTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "UploadRequest" : {
        "required" : [ "file" ],
        "type" : "object",
        "properties" : {
          "dir" : {
            "pattern" : "^(?:/[\\w\\-.~!$&'()*+,;=:@%]+)*$",
            "type" : "string",
            "description" : "Segments of the path, relative to the current static page, are divided by slashes to form multiple subpaths"
          },
          "file" : {
            "type" : "string",
            "format" : "binary"
          },
          "formData" : {
            "type" : "object",
            "properties" : {
              "all" : {
                "type" : "object",
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Part"
                },
                "writeOnly" : true
              },
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Part"
              }
            }
          },
          "unzip" : {
            "type" : "boolean"
          }
        }
      },
      "WriteContentRequest" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string"
          }
        }
      }
    },
    "securitySchemes" : {
      "basicAuth" : {
        "scheme" : "basic",
        "type" : "http"
      },
      "bearerAuth" : {
        "bearerFormat" : "JWT",
        "scheme" : "bearer",
        "type" : "http"
      }
    }
  }
}